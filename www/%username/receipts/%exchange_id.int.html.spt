import balanced

from aspen import Response
from gratipay.models.exchange_route import ExchangeRoute
from gratipay.utils import get_participant

[-------------------]

participant = get_participant(state, restrict=True)

exchange = website.db.one("""
    SELECT *
      FROM exchanges
     WHERE id = %s
       AND participant = %s
       AND amount > 0
""", (request.path['exchange_id'], participant.username))
if exchange is None:
    raise Response(404)

route = ExchangeRoute.from_id(exchange.route)
if route and route.network == 'balanced-cc':
    card = balanced.Card.fetch(route.address)
else:
    card = balanced.Card(address={}, meta={})

[-------------------]
<style>
    body {
        margin: 0;
        padding: 0;
        background: #EEE;
    }
    body, table {
        font: normal 12pt/14pt 'Helvetica Neue', Helvetica, Arial, 'Liberation Sans', FreeSans, sans-serif;
    }
    #page {
        width: 3in;
        border: 1px solid black;
        background: white;
        margin: 1pc auto;
    }
    #page-padding {
        padding: 0.25in;
    }
    h1 {
        margin: 0;
        padding: 1.5em 0 0.5em;
    }
    table {
        margin: 1em 0;
    }
    th, td {
        vertical-align: top;
        margin: 0;
        padding: 0;
    }
    th {
        text-align: left;
        padding-right: 1em;
    }
    td {
        text-align: right;
    }
    .total {
        font-size: 14pt;
    }
    #txnid {
        border-top: 1px solid black;
        margin: 0;
        padding: 0;
        font-size: 8.5pt;
        line-height: 8.5pt;
        text-transform: uppercase;
        width: 100%;
    }
    #txnid td {
        padding: 3pt 0 0;
        white-space: nowrap;
    }
    #txnid td.date { text-align: left; }
    #txnid td.mdash { text-align: center; width: 100%; }
    #txnid td.txnid { text-align: right; }
</style>
<div id="page"><div id="page-padding">

    <div>
        Gratipay, LLC<br />
        716 Park Road<br />
        Ambridge, PA 15003<br />
    </div>

    <h1>Receipt</h1>

    <div id="their-info">
        {% if route and route.network == 'coinbase-payin' %}
            {{ participant.username }} <br /> <br />
            Coinbase Order ID: {{ route.address }} <br /><br />
        {% else %}
            {{ card.name }}
            ({{ participant.username }})<br />
            {{ card.number }} ({{ card.brand }})<br />
            {{ card.address.line1 }}<br />
            {% if card.address.line2 %}
            {{ card.address.line2 }}<br />
            {% endif %}
            {{ card.address.city }}{% if card.address.city %},{% endif %}
            {{ card.address.state }}
            {{ card.address.postal_code }}<br />
            {{ locale.countries.get(card.address.country_code, '') }}
        {% endif %}
    </div>

    <table>
        <tr>
            <th>Amount:</th>
            <td>$</td>
            <td>{{ exchange.amount }}</td>
        </tr>
        <tr>
            <th>Fee:</th>
            <td>$</td>
            <td>{{ exchange.fee }}</td>
        </tr>
        <tr class="total">
            <th>Total:</th>
            <td>$</td>
            <td>{{ exchange.fee + exchange.amount }}</td>
        </tr>
    </table>

    <table id="txnid">
        <tr>
            <td class="date">{{ exchange.timestamp.strftime("%B %d, %Y").replace(' 0', ' ') }}</td>
            <td class="mdash">&mdash;</td>
            <td class="txnid">Transaction ID: {{ exchange.id }}</td>
        </tr>
    </table>

</div></div>
